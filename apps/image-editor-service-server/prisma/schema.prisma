datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime @default(now())
  email     String?
  faces     Face[]
  id        String   @id @default(cuid())
  images    Image[]
  password  String?
  updatedAt DateTime @updatedAt
  username  String?
}

model Image {
  createdAt  DateTime  @default(now())
  faces      Face[]
  id         String    @id @default(cuid())
  updatedAt  DateTime  @updatedAt
  uploadedAt DateTime?
  url        String?
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?
}

model Face {
  createdAt     DateTime   @default(now())
  featuresItems Features[]
  id            String     @id @default(cuid())
  image         Image?     @relation(fields: [imageId], references: [id])
  imageId       String?
  updatedAt     DateTime   @updatedAt
  user          User?      @relation(fields: [userId], references: [id])
  userId        String?
}

model BodyType {
  createdAt     DateTime   @default(now())
  featuresItems Features[]
  id            String     @id @default(cuid())
  typeField     String?
  updatedAt     DateTime   @updatedAt
}

model Features {
  bodyType    BodyType?  @relation(fields: [bodyTypeId], references: [id])
  bodyTypeId  String?
  createdAt   DateTime   @default(now())
  face        Face?      @relation(fields: [faceId], references: [id])
  faceId      String?
  hairColor   HairColor? @relation(fields: [hairColorId], references: [id])
  hairColorId String?
  height      Float?
  id          String     @id @default(cuid())
  updatedAt   DateTime   @updatedAt
  weight      Float?
}

model HairColor {
  color         String?
  createdAt     DateTime   @default(now())
  featuresItems Features[]
  id            String     @id @default(cuid())
  updatedAt     DateTime   @updatedAt
}
