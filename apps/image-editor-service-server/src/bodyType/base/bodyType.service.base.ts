/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  BodyType as PrismaBodyType,
  Features as PrismaFeatures,
} from "@prisma/client";

export class BodyTypeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BodyTypeCountArgs, "select">): Promise<number> {
    return this.prisma.bodyType.count(args);
  }

  async bodyTypes<T extends Prisma.BodyTypeFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BodyTypeFindManyArgs>
  ): Promise<PrismaBodyType[]> {
    return this.prisma.bodyType.findMany<Prisma.BodyTypeFindManyArgs>(args);
  }
  async bodyType<T extends Prisma.BodyTypeFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BodyTypeFindUniqueArgs>
  ): Promise<PrismaBodyType | null> {
    return this.prisma.bodyType.findUnique(args);
  }
  async createBodyType<T extends Prisma.BodyTypeCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BodyTypeCreateArgs>
  ): Promise<PrismaBodyType> {
    return this.prisma.bodyType.create<T>(args);
  }
  async updateBodyType<T extends Prisma.BodyTypeUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BodyTypeUpdateArgs>
  ): Promise<PrismaBodyType> {
    return this.prisma.bodyType.update<T>(args);
  }
  async deleteBodyType<T extends Prisma.BodyTypeDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BodyTypeDeleteArgs>
  ): Promise<PrismaBodyType> {
    return this.prisma.bodyType.delete(args);
  }

  async findFeaturesItems(
    parentId: string,
    args: Prisma.FeaturesFindManyArgs
  ): Promise<PrismaFeatures[]> {
    return this.prisma.bodyType
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .featuresItems(args);
  }
}
